# used to create the object
name: Chair

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
env:
  numEnvs: ${resolve_default:4096,${...num_envs}}
  envSpacing: 1
  episodeLength: 350
  enableDebugVis: False

  clipActions: 1.0

  powerScale: 1.0
  controlFrequencyInv: 3 # 20 Hz

  # reward parameters
  headingWeight: 0.5
  upWeight: 0 # 50
  upHeadingWeight: 30

  # cost parameters
  actionsCost: 0.01
  deathCost: -1.0
  terminationHeight: -1.06

  # reward parameters
  omegaWeight: 0
  # headingWeight: 5 # 0.5
  moveForwardWeight: 5 # 5
  heightWeight: 5 # 0.5 -> 5
  aliveWeight: 0 # 3.0 -> 20
  progressWeight: 100
  # upWeight: 1 # 0.5

  # cost parameters
  tiltWeight: 0
  terminationTilt: 0.7 # 0.4 -> 0.28 -> 0.3
  # terminationHeight: 0.06
  # actionsCost: -0.1
  energyCost: 0.05
  dofVelocityScale: 0.2
  contactForceScale: 0.1
  jointsAtLimitCost: 0.1
  # deathCost: -2

  plane:
    staticFriction: 0.3
    dynamicFriction: 0.3
    restitution: 0.0

  asset:
    assetFileName: "mjcf/chair/chair.xml"

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.05 # 1/20 s
  substeps: 2
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 0
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 10.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 0 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (broken - do not use!)

task:
  randomize: False
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 720   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .05] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .05]
      operation: "additive"
      distribution: "gaussian"
    actor_params:
      chair:
        color: True
        rigid_body_properties:
          mass: 
            range: [0.5, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: False # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
        dof_properties:
          damping: 
            range: [0.01, 2.0]
            operation: "scaling"
            distribution: "loguniform"
          stiffness:
            range: [0.01, 2.0]
            operation: "scaling"
            distribution: "loguniform"
            # schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            # schedule_steps: 30000
          effort:
            range: [0.4, 1.0]
            operation: "scaling"
            distribution: "uniform"
          friction:
            range: [0.0, 1.0]
            operation: "scaling"
            distribution: "uniform"
          armature:
            range: [0.0, 1.0]
            operation: "scaling"
            distribution: "uniform"
          # damping: 
          #   range: [0.5, 1.5]
          #   operation: "scaling"
          #   distribution: "uniform"
          # stiffness: 
          #   range: [0.5, 1.5]
          #   operation: "scaling"
          #   distribution: "uniform"
          lower:
            # range: [0, 0.01]
            # operation: "additive"
            # distribution: "gaussian"
            range: [-0.5, 0.5]
            operation: "additive"
            distribution: "uniform"
          upper:
            # range: [0, 0.01]
            # operation: "additive"
            # distribution: "gaussian"
            range: [-0.5, 0.5]
            operation: "additive"
            distribution: "uniform"
